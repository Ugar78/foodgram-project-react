version: '3.3'

volumes:
  pg_data:
  static:
  media:
  data:
  redoc:

services:

  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    restart: always

  backend:
    image: ugar78/foodgram_backend
    env_file: .env
    volumes:
      - data:/app/data/
      - static:/app/static/
      - media:/app/media/
      - redoc:/usr/share/nginx/html/api/docs/  # Обновлено
    depends_on:
      - db
    restart: always

  frontend:
    image: ugar78/foodgram_frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    ports:
      - 8000:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static:/var/html/static/
      - media:/var/html/media/
      - redoc:/usr/share/nginx/html/api/docs/
    depends_on:
      - backend
      - frontend



# version: '3'

# volumes:
#   pg_data_production:
#   static_volume:
#   media_volume:

# services:
#   db:
#     image: postgres:13
#     env_file: .env
#     volumes:
#       - pg_data_production:/var/lib/postgresql/data
#   backend:
#     image: ugar78/foodgram_backend
#     env_file: .env
#     volumes:
#       - static_volume:/static
#       - media_volume:/app/media
#   frontend:
#     image: ugar78/foodgram_frontend
#     env_file: .env
#     command: cp -r /app/build/. /static/
#     volumes:
#       - static_volume:/static
#   gateway:
#     image: ugar78/foodgram_gateway
#     env_file: .env
#     volumes:
#       - static_volume:/static
#       - media_volume:/app/media
#     ports:
#       - 8000:80
