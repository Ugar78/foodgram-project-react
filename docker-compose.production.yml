version: '3.3'
services:


  db:
    image: postgres:13.0-alpine
    # container_name: database_foodgram
    volumes:
      - pg_data_production:/var/lib/postgresql/data/
    env_file: .env

  backend:
    image: ugar78/foodgram_backend:latest
    # container_name: backend_foodgram
    # restart: always
    volumes:
      - static_volume:/app_back/static/
      - media_volume:/app_back/media/
    depends_on:
      - db
    env_file: .env

  frontend:
    image: ugar78/foodgram_frontend:latest
    # container_name: frontend_foodgram
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    # container_name: nginx_foodgram
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/var/html/static/
      - media_volume:/var/html/media/
    depends_on:
      - backend
volumes:
  pg_data_production:
  static_volume:
  media_volume:



# version: '3'

# volumes:
#   pg_data_production:
#   static_volume:
#   media_volume:

# services:
#   db:
#     image: postgres:13
#     env_file: .env
#     volumes:
#       - pg_data_production:/var/lib/postgresql/data
#   backend:
#     image: ugar78/foodgram_backend
#     env_file: .env
#     volumes:
#       - static_volume:/static
#       - media_volume:/app/media
#   frontend:
#     image: ugar78/foodgram_frontend
#     env_file: .env
#     command: cp -r /app/build/. /static/
#     volumes:
#       - static_volume:/static
#   gateway:
#     image: ugar78/foodgram_gateway
#     env_file: .env
#     volumes:
#       - static_volume:/static
#       - media_volume:/var/html/media/
#     ports:
#       - 9000:80
